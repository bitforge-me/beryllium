"""balance update table

Revision ID: 582a80fd3fda
Revises: 18dfbeea62f3
Create Date: 2022-07-20 01:55:32.073206

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '582a80fd3fda'
down_revision = '18dfbeea62f3'
branch_labels = None
depends_on = None


def upgrade():
    # NOTE: this upgrade destroys deposit/withdrawal history as we have not made a data migrator,
    #  here are some manual adjustments to help the auto-generated migration completed
    op.drop_constraint('withdrawal_confirmation_crypto_withdrawal_id_fkey', 'withdrawal_confirmation', type_='foreignkey')  # bring these forward
    op.drop_constraint('withdrawal_confirmation_fiat_withdrawal_id_fkey', 'withdrawal_confirmation', type_='foreignkey')
    op.execute('DELETE from withdrawal_confirmation')  # get rid of old confirmation records
    op.drop_constraint('crypto_deposit_crypto_address_id_fkey', 'crypto_deposit', type_='foreignkey')  # get rid of any crypto addresses so that we dont reprocess any existing wallet transactions
    op.execute('DELETE from crypto_address')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('balance_update',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('crypto', sa.Boolean(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=False),
    sa.Column('asset', sa.String(), nullable=False),
    sa.Column('l2_network', sa.String(), nullable=True),
    sa.Column('amount', sa.BigInteger(), nullable=False),
    sa.Column('fee', sa.BigInteger(), nullable=False),
    sa.Column('recipient', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('balance_tx_id', sa.Integer(), nullable=True),
    sa.Column('balance_tx_cancel_id', sa.Integer(), nullable=True),
    sa.Column('exchange_reference', sa.String(), nullable=True),
    sa.Column('wallet_reference', sa.String(), nullable=True),
    sa.Column('txid', sa.String(), nullable=True),
    sa.Column('crypto_address_id', sa.Integer(), nullable=True),
    sa.Column('address_book_id', sa.Integer(), nullable=True),
    sa.Column('windcave_payment_request_id', sa.Integer(), nullable=True),
    sa.Column('crown_payment_id', sa.Integer(), nullable=True),
    sa.Column('payout_request_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['address_book_id'], ['address_book.id'], ),
    sa.ForeignKeyConstraint(['balance_tx_cancel_id'], ['fiat_db_transaction.id'], ),
    sa.ForeignKeyConstraint(['balance_tx_id'], ['fiat_db_transaction.id'], ),
    sa.ForeignKeyConstraint(['crown_payment_id'], ['crown_payment.id'], ),
    sa.ForeignKeyConstraint(['crypto_address_id'], ['crypto_address.id'], ),
    sa.ForeignKeyConstraint(['payout_request_id'], ['payout_request.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['windcave_payment_request_id'], ['windcave_payment_request.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.drop_table('fiat_withdrawal')
    op.drop_table('fiat_deposit')
    op.drop_table('crypto_withdrawal')
    op.drop_table('crypto_deposit')
    op.add_column('withdrawal_confirmation', sa.Column('withdrawal_id', sa.Integer(), nullable=True))
    #op.drop_constraint('withdrawal_confirmation_crypto_withdrawal_id_fkey', 'withdrawal_confirmation', type_='foreignkey')
    #op.drop_constraint('withdrawal_confirmation_fiat_withdrawal_id_fkey', 'withdrawal_confirmation', type_='foreignkey')
    op.create_foreign_key(None, 'withdrawal_confirmation', 'balance_update', ['withdrawal_id'], ['id'])
    op.drop_column('withdrawal_confirmation', 'fiat_withdrawal_id')
    op.drop_column('withdrawal_confirmation', 'crypto_withdrawal_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('withdrawal_confirmation', sa.Column('crypto_withdrawal_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('withdrawal_confirmation', sa.Column('fiat_withdrawal_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'withdrawal_confirmation', type_='foreignkey')
    op.create_foreign_key('withdrawal_confirmation_fiat_withdrawal_id_fkey', 'withdrawal_confirmation', 'fiat_withdrawal', ['fiat_withdrawal_id'], ['id'])
    op.create_foreign_key('withdrawal_confirmation_crypto_withdrawal_id_fkey', 'withdrawal_confirmation', 'crypto_withdrawal', ['crypto_withdrawal_id'], ['id'])
    op.drop_column('withdrawal_confirmation', 'withdrawal_id')
    op.create_table('crypto_deposit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('crypto_address_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('asset', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('l2_network', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('exchange_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wallet_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('txid', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('confirmed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('expired', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['crypto_address_id'], ['crypto_address.id'], name='crypto_deposit_crypto_address_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='crypto_deposit_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='crypto_deposit_pkey'),
    sa.UniqueConstraint('token', name='crypto_deposit_token_key'),
    sa.UniqueConstraint('txid', name='crypto_deposit_txid_key')
    )
    op.create_table('crypto_withdrawal',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('asset', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('l2_network', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('recipient', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exchange_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wallet_reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('txid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='crypto_withdrawal_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='crypto_withdrawal_pkey'),
    sa.UniqueConstraint('token', name='crypto_withdrawal_token_key')
    )
    op.create_table('fiat_deposit',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('asset', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('windcave_payment_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('crown_payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['crown_payment_id'], ['crown_payment.id'], name='fiat_deposit_crown_payment_id_fkey'),
    sa.ForeignKeyConstraint(['crown_payment_id'], ['crown_payment.id'], name='fk_crown_payment_fiat_deposit'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fiat_deposit_user_id_fkey'),
    sa.ForeignKeyConstraint(['windcave_payment_request_id'], ['windcave_payment_request.id'], name='fiat_deposit_windcave_payment_request_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fiat_deposit_pkey'),
    sa.UniqueConstraint('token', name='fiat_deposit_token_key')
    )
    op.create_table('fiat_withdrawal',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('asset', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('recipient', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payout_request_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['payout_request_id'], ['payout_request.id'], name='fiat_withdrawal_payout_request_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='fiat_withdrawal_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='fiat_withdrawal_pkey'),
    sa.UniqueConstraint('token', name='fiat_withdrawal_token_key')
    )
    op.drop_table('balance_update')
    # ### end Alembic commands ###
