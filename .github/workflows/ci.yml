name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gettext librsync-dev gnupg-agent npm
        npm install --save-dev eslint eslint-config-standard @eladavron/eslint-plugin-jinja eslint-plugin-html
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_lint.txt
    - name: Analysing the code with linters
      run: |
        ./lint.sh

  test-deploy:
    needs: lint
    if: github.event_name == 'push' && github.ref_name == 'test'
    runs-on: ubuntu-latest

    steps:
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Run deploy script
      run: |
        cd ansible
        echo y | ./ansible_deploy.sh test beryllium_only test

  test-scan-baseline:
    needs: test-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # setup our zaproxy context file with the secred username and password
      - name: Context Setup
        env:
          CTX_USERNAME: ${{secrets.BE_USERNAME_BASE64}}
          CTX_PASSWORD: ${{secrets.BE_PASSWORD_BASE64}}
        run: |
          sed -ie "s/{{USERNAME}}/${CTX_USERNAME}/g" $GITHUB_WORKSPACE/web/zaproxy/zaproxy.context
          sed -ie "s/{{PASSWORD}}/${CTX_PASSWORD}/" $GITHUB_WORKSPACE/web/zaproxy/zaproxy.context
      - name: ZAP Scan Baseline
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'https://beryllium-test.zap.me'
          # select our context file (the zaproxy docker image mounts the `GITHUB_WORKSPACE` to `/zap/wrk`)
          cmd_options: -U ${{secrets.BE_USERNAME}} -n /zap/wrk/web/zaproxy/zaproxy.context

  test-scan-api:
    needs: test-deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: ZAP Scan Api
        uses: zaproxy/action-api-scan@v0.1.1
        with:
          target: 'https://dev.bitforge.me/openapi.yaml'